<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddLineDownText" xml:space="preserve">
    <value>Add New Line Bellow This Line</value>
  </data>
  <data name="AddLineToBottom" xml:space="preserve">
    <value>Add New Line to the End of File</value>
  </data>
  <data name="AddLineTooltipText" xml:space="preserve">
    <value>Add Line... Choose placement in the Combo Box</value>
  </data>
  <data name="AddLineToTopText" xml:space="preserve">
    <value>Add New Line to the Beggining of File</value>
  </data>
  <data name="AddLineUpText" xml:space="preserve">
    <value>Add New Line Above This Line</value>
  </data>
  <data name="AuthorText" xml:space="preserve">
    <value>Author</value>
  </data>
  <data name="CancelProcessText" xml:space="preserve">
    <value>Cancel Process</value>
  </data>
  <data name="CancelText" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CommiterText" xml:space="preserve">
    <value>Commiter</value>
  </data>
  <data name="CommitMessageText" xml:space="preserve">
    <value>Commit Message</value>
  </data>
  <data name="CommitRepositoryText" xml:space="preserve">
    <value>Commit Repository</value>
  </data>
  <data name="CommitText" xml:space="preserve">
    <value>Commit on Save</value>
  </data>
  <data name="DeleteLineText" xml:space="preserve">
    <value>Delete This Line</value>
  </data>
  <data name="EditedText" xml:space="preserve">
    <value>Edited</value>
  </data>
  <data name="EditText" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditThisLineText" xml:space="preserve">
    <value>Edit this line</value>
  </data>
  <data name="EmailText" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="ExitAndSaveText" xml:space="preserve">
    <value>Save and Close Csv Editor</value>
  </data>
  <data name="ExitAppText" xml:space="preserve">
    <value>Close Csv Editor</value>
  </data>
  <data name="FileText" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="GitSetupWindowTitle" xml:space="preserve">
    <value>Git Setup</value>
  </data>
  <data name="GitText" xml:space="preserve">
    <value>Git</value>
  </data>
  <data name="LineEditorText" xml:space="preserve">
    <value>LineEditor</value>
  </data>
  <data name="LineNrText" xml:space="preserve">
    <value>Line:</value>
  </data>
  <data name="LoadDirectoryText" xml:space="preserve">
    <value>Load Directory</value>
  </data>
  <data name="LoadedCSVFilesText" xml:space="preserve">
    <value>Loaded CSV files</value>
  </data>
  <data name="LoadText" xml:space="preserve">
    <value>Load</value>
  </data>
  <data name="NotCommitedError" xml:space="preserve">
    <value>Git Commit not performed - no changes to commit.</value>
  </data>
  <data name="NotEditedText" xml:space="preserve">
    <value>Not Edited</value>
  </data>
  <data name="NotGitRepository" xml:space="preserve">
    <value>Directory doesn't contain Git repository.</value>
  </data>
  <data name="OKText" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="OpenGitSetupText" xml:space="preserve">
    <value>Open Git Setup Window</value>
  </data>
  <data name="OverwriteText" xml:space="preserve">
    <value>Overwrite</value>
  </data>
  <data name="PasswordText" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PullRepositoryText" xml:space="preserve">
    <value>Pull From Remote Repository</value>
  </data>
  <data name="PushRepositoryText" xml:space="preserve">
    <value>Push To Remote Repository</value>
  </data>
  <data name="PushText" xml:space="preserve">
    <value>Push on Save</value>
  </data>
  <data name="RawFileText" xml:space="preserve">
    <value>Raw File</value>
  </data>
  <data name="RememberSelectionText" xml:space="preserve">
    <value>Remember This Selection</value>
  </data>
  <data name="RemoteBranchNameText" xml:space="preserve">
    <value>RemoteBranch</value>
  </data>
  <data name="RemoteLinkText" xml:space="preserve">
    <value>Remote repository link</value>
  </data>
  <data name="SaveAsText" xml:space="preserve">
    <value>Save as...</value>
  </data>
  <data name="SaveText" xml:space="preserve">
    <value>Save...</value>
  </data>
  <data name="SaveToText" xml:space="preserve">
    <value>Save To: </value>
  </data>
  <data name="SaveWindowTitle" xml:space="preserve">
    <value>Save Options</value>
  </data>
  <data name="SelectPromptComboBoxText" xml:space="preserve">
    <value>-- Select value --</value>
  </data>
  <data name="UserNameText" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="UseThisSetupText" xml:space="preserve">
    <value>Use This Setup</value>
  </data>
</root>